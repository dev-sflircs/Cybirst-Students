#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cybirst
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EggDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertEnrollment(Enrollment instance);
    partial void UpdateEnrollment(Enrollment instance);
    partial void DeleteEnrollment(Enrollment instance);
    partial void InsertInstructor(Instructor instance);
    partial void UpdateInstructor(Instructor instance);
    partial void DeleteInstructor(Instructor instance);
    partial void InsertLesson(Lesson instance);
    partial void UpdateLesson(Lesson instance);
    partial void DeleteLesson(Lesson instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertTechnology(Technology instance);
    partial void UpdateTechnology(Technology instance);
    partial void DeleteTechnology(Technology instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EggDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Enrollment> Enrollments
		{
			get
			{
				return this.GetTable<Enrollment>();
			}
		}
		
		public System.Data.Linq.Table<Instructor> Instructors
		{
			get
			{
				return this.GetTable<Instructor>();
			}
		}
		
		public System.Data.Linq.Table<Lesson> Lessons
		{
			get
			{
				return this.GetTable<Lesson>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Technology> Technologies
		{
			get
			{
				return this.GetTable<Technology>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TeachnologyID;
		
		private string _Name;
		
		private string _Intro;
		
		private string _Image;
		
		private string _MediumImage;
		
		private string _LargeImage;
		
		private System.Nullable<int> _IsPro;
		
		private System.Nullable<int> _NumberLesson;
		
		private System.Nullable<int> _NumberMinutes;
		
		private System.Data.Linq.Binary _LastUpdate;
		
		private EntitySet<Lesson> _Lessons;
		
		private EntityRef<Technology> _Technology;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTeachnologyIDChanging(int value);
    partial void OnTeachnologyIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnMediumImageChanging(string value);
    partial void OnMediumImageChanged();
    partial void OnLargeImageChanging(string value);
    partial void OnLargeImageChanged();
    partial void OnIsProChanging(System.Nullable<int> value);
    partial void OnIsProChanged();
    partial void OnNumberLessonChanging(System.Nullable<int> value);
    partial void OnNumberLessonChanged();
    partial void OnNumberMinutesChanging(System.Nullable<int> value);
    partial void OnNumberMinutesChanged();
    partial void OnLastUpdateChanging(System.Data.Linq.Binary value);
    partial void OnLastUpdateChanged();
    #endregion
		
		public Course()
		{
			this._Lessons = new EntitySet<Lesson>(new Action<Lesson>(this.attach_Lessons), new Action<Lesson>(this.detach_Lessons));
			this._Technology = default(EntityRef<Technology>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachnologyID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TeachnologyID
		{
			get
			{
				return this._TeachnologyID;
			}
			set
			{
				if ((this._TeachnologyID != value))
				{
					if (this._Technology.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeachnologyIDChanging(value);
					this.SendPropertyChanging();
					this._TeachnologyID = value;
					this.SendPropertyChanged("TeachnologyID");
					this.OnTeachnologyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumImage", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MediumImage
		{
			get
			{
				return this._MediumImage;
			}
			set
			{
				if ((this._MediumImage != value))
				{
					this.OnMediumImageChanging(value);
					this.SendPropertyChanging();
					this._MediumImage = value;
					this.SendPropertyChanged("MediumImage");
					this.OnMediumImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargeImage", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LargeImage
		{
			get
			{
				return this._LargeImage;
			}
			set
			{
				if ((this._LargeImage != value))
				{
					this.OnLargeImageChanging(value);
					this.SendPropertyChanging();
					this._LargeImage = value;
					this.SendPropertyChanged("LargeImage");
					this.OnLargeImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPro", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IsPro
		{
			get
			{
				return this._IsPro;
			}
			set
			{
				if ((this._IsPro != value))
				{
					this.OnIsProChanging(value);
					this.SendPropertyChanging();
					this._IsPro = value;
					this.SendPropertyChanged("IsPro");
					this.OnIsProChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberLesson", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberLesson
		{
			get
			{
				return this._NumberLesson;
			}
			set
			{
				if ((this._NumberLesson != value))
				{
					this.OnNumberLessonChanging(value);
					this.SendPropertyChanging();
					this._NumberLesson = value;
					this.SendPropertyChanged("NumberLesson");
					this.OnNumberLessonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberMinutes", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberMinutes
		{
			get
			{
				return this._NumberMinutes;
			}
			set
			{
				if ((this._NumberMinutes != value))
				{
					this.OnNumberMinutesChanging(value);
					this.SendPropertyChanging();
					this._NumberMinutes = value;
					this.SendPropertyChanged("NumberMinutes");
					this.OnNumberMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Lesson", Storage="_Lessons", ThisKey="ID", OtherKey="CourseID")]
		public EntitySet<Lesson> Lessons
		{
			get
			{
				return this._Lessons;
			}
			set
			{
				this._Lessons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technology_Course", Storage="_Technology", ThisKey="TeachnologyID", OtherKey="ID", IsForeignKey=true)]
		public Technology Technology
		{
			get
			{
				return this._Technology.Entity;
			}
			set
			{
				Technology previousValue = this._Technology.Entity;
				if (((previousValue != value) 
							|| (this._Technology.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technology.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Technology.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._TeachnologyID = value.ID;
					}
					else
					{
						this._TeachnologyID = default(int);
					}
					this.SendPropertyChanged("Technology");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lessons(Lesson entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Lessons(Lesson entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enrollment")]
	public partial class Enrollment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _StudentID;
		
		private int _LessonID;
		
		private System.Nullable<int> _IsComplete;
		
		private System.Nullable<System.TimeSpan> _TimeStart;
		
		private System.Nullable<int> _OrderState;
		
		private System.Data.Linq.Binary _LastActive;
		
		private EntityRef<Lesson> _Lesson;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnLessonIDChanging(int value);
    partial void OnLessonIDChanged();
    partial void OnIsCompleteChanging(System.Nullable<int> value);
    partial void OnIsCompleteChanged();
    partial void OnTimeStartChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeStartChanged();
    partial void OnOrderStateChanging(System.Nullable<int> value);
    partial void OnOrderStateChanged();
    partial void OnLastActiveChanging(System.Data.Linq.Binary value);
    partial void OnLastActiveChanged();
    #endregion
		
		public Enrollment()
		{
			this._Lesson = default(EntityRef<Lesson>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LessonID
		{
			get
			{
				return this._LessonID;
			}
			set
			{
				if ((this._LessonID != value))
				{
					if (this._Lesson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLessonIDChanging(value);
					this.SendPropertyChanging();
					this._LessonID = value;
					this.SendPropertyChanged("LessonID");
					this.OnLessonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplete", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IsComplete
		{
			get
			{
				return this._IsComplete;
			}
			set
			{
				if ((this._IsComplete != value))
				{
					this.OnIsCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsComplete = value;
					this.SendPropertyChanged("IsComplete");
					this.OnIsCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="Time", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.TimeSpan> TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderState", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> OrderState
		{
			get
			{
				return this._OrderState;
			}
			set
			{
				if ((this._OrderState != value))
				{
					this.OnOrderStateChanging(value);
					this.SendPropertyChanging();
					this._OrderState = value;
					this.SendPropertyChanged("OrderState");
					this.OnOrderStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActive", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastActive
		{
			get
			{
				return this._LastActive;
			}
			set
			{
				if ((this._LastActive != value))
				{
					this.OnLastActiveChanging(value);
					this.SendPropertyChanging();
					this._LastActive = value;
					this.SendPropertyChanged("LastActive");
					this.OnLastActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Enrollment", Storage="_Lesson", ThisKey="LessonID", OtherKey="ID", IsForeignKey=true)]
		public Lesson Lesson
		{
			get
			{
				return this._Lesson.Entity;
			}
			set
			{
				Lesson previousValue = this._Lesson.Entity;
				if (((previousValue != value) 
							|| (this._Lesson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lesson.Entity = null;
						previousValue.Enrollments.Remove(this);
					}
					this._Lesson.Entity = value;
					if ((value != null))
					{
						value.Enrollments.Add(this);
						this._LessonID = value.ID;
					}
					else
					{
						this._LessonID = default(int);
					}
					this.SendPropertyChanged("Lesson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Enrollment", Storage="_Student", ThisKey="StudentID", OtherKey="ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Enrollments.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Enrollments.Add(this);
						this._StudentID = value.ID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Instructor")]
	public partial class Instructor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Intro;
		
		private string _Google;
		
		private string _Twitter;
		
		private string _Facebook;
		
		private string _Blog;
		
		private string _Email;
		
		private string _Password;
		
		private string _Phone;
		
		private string _Address;
		
		private string _Avatar;
		
		private string _LargeAvatar;
		
		private string _MediumAvatar;
		
		private System.Data.Linq.Binary _LastUpdate;
		
		private EntitySet<Lesson> _Lessons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnGoogleChanging(string value);
    partial void OnGoogleChanged();
    partial void OnTwitterChanging(string value);
    partial void OnTwitterChanged();
    partial void OnFacebookChanging(string value);
    partial void OnFacebookChanged();
    partial void OnBlogChanging(string value);
    partial void OnBlogChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnLargeAvatarChanging(string value);
    partial void OnLargeAvatarChanged();
    partial void OnMediumAvatarChanging(string value);
    partial void OnMediumAvatarChanged();
    partial void OnLastUpdateChanging(System.Data.Linq.Binary value);
    partial void OnLastUpdateChanged();
    #endregion
		
		public Instructor()
		{
			this._Lessons = new EntitySet<Lesson>(new Action<Lesson>(this.attach_Lessons), new Action<Lesson>(this.detach_Lessons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Google", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Google
		{
			get
			{
				return this._Google;
			}
			set
			{
				if ((this._Google != value))
				{
					this.OnGoogleChanging(value);
					this.SendPropertyChanging();
					this._Google = value;
					this.SendPropertyChanged("Google");
					this.OnGoogleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Twitter", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Twitter
		{
			get
			{
				return this._Twitter;
			}
			set
			{
				if ((this._Twitter != value))
				{
					this.OnTwitterChanging(value);
					this.SendPropertyChanging();
					this._Twitter = value;
					this.SendPropertyChanged("Twitter");
					this.OnTwitterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facebook", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Facebook
		{
			get
			{
				return this._Facebook;
			}
			set
			{
				if ((this._Facebook != value))
				{
					this.OnFacebookChanging(value);
					this.SendPropertyChanging();
					this._Facebook = value;
					this.SendPropertyChanged("Facebook");
					this.OnFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blog", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Blog
		{
			get
			{
				return this._Blog;
			}
			set
			{
				if ((this._Blog != value))
				{
					this.OnBlogChanging(value);
					this.SendPropertyChanging();
					this._Blog = value;
					this.SendPropertyChanged("Blog");
					this.OnBlogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(52) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargeAvatar", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LargeAvatar
		{
			get
			{
				return this._LargeAvatar;
			}
			set
			{
				if ((this._LargeAvatar != value))
				{
					this.OnLargeAvatarChanging(value);
					this.SendPropertyChanging();
					this._LargeAvatar = value;
					this.SendPropertyChanged("LargeAvatar");
					this.OnLargeAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumAvatar", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MediumAvatar
		{
			get
			{
				return this._MediumAvatar;
			}
			set
			{
				if ((this._MediumAvatar != value))
				{
					this.OnMediumAvatarChanging(value);
					this.SendPropertyChanging();
					this._MediumAvatar = value;
					this.SendPropertyChanged("MediumAvatar");
					this.OnMediumAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_Lesson", Storage="_Lessons", ThisKey="ID", OtherKey="InstructorID")]
		public EntitySet<Lesson> Lessons
		{
			get
			{
				return this._Lessons;
			}
			set
			{
				this._Lessons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lessons(Lesson entity)
		{
			this.SendPropertyChanging();
			entity.Instructor = this;
		}
		
		private void detach_Lessons(Lesson entity)
		{
			this.SendPropertyChanging();
			entity.Instructor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lesson")]
	public partial class Lesson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CourseID;
		
		private int _InstructorID;
		
		private string _Name;
		
		private string _Intro;
		
		private System.Nullable<int> _Time;
		
		private string _Video;
		
		private System.Nullable<int> _Order;
		
		private System.Nullable<int> _IsPro;
		
		private System.Data.Linq.Binary _LastUpdate;
		
		private EntitySet<Enrollment> _Enrollments;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Instructor> _Instructor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnInstructorIDChanging(int value);
    partial void OnInstructorIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnTimeChanging(System.Nullable<int> value);
    partial void OnTimeChanged();
    partial void OnVideoChanging(string value);
    partial void OnVideoChanged();
    partial void OnOrderChanging(System.Nullable<int> value);
    partial void OnOrderChanged();
    partial void OnIsProChanging(System.Nullable<int> value);
    partial void OnIsProChanged();
    partial void OnLastUpdateChanging(System.Data.Linq.Binary value);
    partial void OnLastUpdateChanged();
    #endregion
		
		public Lesson()
		{
			this._Enrollments = new EntitySet<Enrollment>(new Action<Enrollment>(this.attach_Enrollments), new Action<Enrollment>(this.detach_Enrollments));
			this._Course = default(EntityRef<Course>);
			this._Instructor = default(EntityRef<Instructor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstructorID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InstructorID
		{
			get
			{
				return this._InstructorID;
			}
			set
			{
				if ((this._InstructorID != value))
				{
					if (this._Instructor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstructorIDChanging(value);
					this.SendPropertyChanging();
					this._InstructorID = value;
					this.SendPropertyChanged("InstructorID");
					this.OnInstructorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this.OnOrderChanging(value);
					this.SendPropertyChanging();
					this._Order = value;
					this.SendPropertyChanged("Order");
					this.OnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPro", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IsPro
		{
			get
			{
				return this._IsPro;
			}
			set
			{
				if ((this._IsPro != value))
				{
					this.OnIsProChanging(value);
					this.SendPropertyChanging();
					this._IsPro = value;
					this.SendPropertyChanged("IsPro");
					this.OnIsProChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Enrollment", Storage="_Enrollments", ThisKey="ID", OtherKey="LessonID")]
		public EntitySet<Enrollment> Enrollments
		{
			get
			{
				return this._Enrollments;
			}
			set
			{
				this._Enrollments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Lesson", Storage="_Course", ThisKey="CourseID", OtherKey="ID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Lessons.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Lessons.Add(this);
						this._CourseID = value.ID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Instructor_Lesson", Storage="_Instructor", ThisKey="InstructorID", OtherKey="ID", IsForeignKey=true)]
		public Instructor Instructor
		{
			get
			{
				return this._Instructor.Entity;
			}
			set
			{
				Instructor previousValue = this._Instructor.Entity;
				if (((previousValue != value) 
							|| (this._Instructor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Instructor.Entity = null;
						previousValue.Lessons.Remove(this);
					}
					this._Instructor.Entity = value;
					if ((value != null))
					{
						value.Lessons.Add(this);
						this._InstructorID = value.ID;
					}
					else
					{
						this._InstructorID = default(int);
					}
					this.SendPropertyChanged("Instructor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Enrollments(Enrollment entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = this;
		}
		
		private void detach_Enrollments(Enrollment entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Intro;
		
		private string _Google;
		
		private string _Twitter;
		
		private string _Facebook;
		
		private string _Blog;
		
		private string _Email;
		
		private string _Password;
		
		private string _Phone;
		
		private string _Address;
		
		private string _Avatar;
		
		private string _LargeAvatar;
		
		private string _MediumAvatar;
		
		private System.Nullable<System.TimeSpan> _ExpiredProTime;
		
		private System.Data.Linq.Binary _LastUpdate;
		
		private EntitySet<Enrollment> _Enrollments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnGoogleChanging(string value);
    partial void OnGoogleChanged();
    partial void OnTwitterChanging(string value);
    partial void OnTwitterChanged();
    partial void OnFacebookChanging(string value);
    partial void OnFacebookChanged();
    partial void OnBlogChanging(string value);
    partial void OnBlogChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnLargeAvatarChanging(string value);
    partial void OnLargeAvatarChanged();
    partial void OnMediumAvatarChanging(string value);
    partial void OnMediumAvatarChanged();
    partial void OnExpiredProTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnExpiredProTimeChanged();
    partial void OnLastUpdateChanging(System.Data.Linq.Binary value);
    partial void OnLastUpdateChanged();
    #endregion
		
		public Student()
		{
			this._Enrollments = new EntitySet<Enrollment>(new Action<Enrollment>(this.attach_Enrollments), new Action<Enrollment>(this.detach_Enrollments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Google", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Google
		{
			get
			{
				return this._Google;
			}
			set
			{
				if ((this._Google != value))
				{
					this.OnGoogleChanging(value);
					this.SendPropertyChanging();
					this._Google = value;
					this.SendPropertyChanged("Google");
					this.OnGoogleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Twitter", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Twitter
		{
			get
			{
				return this._Twitter;
			}
			set
			{
				if ((this._Twitter != value))
				{
					this.OnTwitterChanging(value);
					this.SendPropertyChanging();
					this._Twitter = value;
					this.SendPropertyChanged("Twitter");
					this.OnTwitterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facebook", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Facebook
		{
			get
			{
				return this._Facebook;
			}
			set
			{
				if ((this._Facebook != value))
				{
					this.OnFacebookChanging(value);
					this.SendPropertyChanging();
					this._Facebook = value;
					this.SendPropertyChanged("Facebook");
					this.OnFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blog", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Blog
		{
			get
			{
				return this._Blog;
			}
			set
			{
				if ((this._Blog != value))
				{
					this.OnBlogChanging(value);
					this.SendPropertyChanging();
					this._Blog = value;
					this.SendPropertyChanged("Blog");
					this.OnBlogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargeAvatar", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LargeAvatar
		{
			get
			{
				return this._LargeAvatar;
			}
			set
			{
				if ((this._LargeAvatar != value))
				{
					this.OnLargeAvatarChanging(value);
					this.SendPropertyChanging();
					this._LargeAvatar = value;
					this.SendPropertyChanged("LargeAvatar");
					this.OnLargeAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumAvatar", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MediumAvatar
		{
			get
			{
				return this._MediumAvatar;
			}
			set
			{
				if ((this._MediumAvatar != value))
				{
					this.OnMediumAvatarChanging(value);
					this.SendPropertyChanging();
					this._MediumAvatar = value;
					this.SendPropertyChanged("MediumAvatar");
					this.OnMediumAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredProTime", DbType="Time", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.TimeSpan> ExpiredProTime
		{
			get
			{
				return this._ExpiredProTime;
			}
			set
			{
				if ((this._ExpiredProTime != value))
				{
					this.OnExpiredProTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpiredProTime = value;
					this.SendPropertyChanged("ExpiredProTime");
					this.OnExpiredProTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Enrollment", Storage="_Enrollments", ThisKey="ID", OtherKey="StudentID")]
		public EntitySet<Enrollment> Enrollments
		{
			get
			{
				return this._Enrollments;
			}
			set
			{
				this._Enrollments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Enrollments(Enrollment entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Enrollments(Enrollment entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technology")]
	public partial class Technology : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Intro;
		
		private string _Image;
		
		private string _MediumImage;
		
		private string _LargeImage;
		
		private System.Nullable<int> _NumberCourses;
		
		private System.Nullable<int> _NumberLessons;
		
		private System.Data.Linq.Binary _LastUpdate;
		
		private EntitySet<Course> _Courses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnMediumImageChanging(string value);
    partial void OnMediumImageChanged();
    partial void OnLargeImageChanging(string value);
    partial void OnLargeImageChanged();
    partial void OnNumberCoursesChanging(System.Nullable<int> value);
    partial void OnNumberCoursesChanged();
    partial void OnNumberLessonsChanging(System.Nullable<int> value);
    partial void OnNumberLessonsChanged();
    partial void OnLastUpdateChanging(System.Data.Linq.Binary value);
    partial void OnLastUpdateChanged();
    #endregion
		
		public Technology()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumImage", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MediumImage
		{
			get
			{
				return this._MediumImage;
			}
			set
			{
				if ((this._MediumImage != value))
				{
					this.OnMediumImageChanging(value);
					this.SendPropertyChanging();
					this._MediumImage = value;
					this.SendPropertyChanged("MediumImage");
					this.OnMediumImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargeImage", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LargeImage
		{
			get
			{
				return this._LargeImage;
			}
			set
			{
				if ((this._LargeImage != value))
				{
					this.OnLargeImageChanging(value);
					this.SendPropertyChanging();
					this._LargeImage = value;
					this.SendPropertyChanged("LargeImage");
					this.OnLargeImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberCourses", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberCourses
		{
			get
			{
				return this._NumberCourses;
			}
			set
			{
				if ((this._NumberCourses != value))
				{
					this.OnNumberCoursesChanging(value);
					this.SendPropertyChanging();
					this._NumberCourses = value;
					this.SendPropertyChanged("NumberCourses");
					this.OnNumberCoursesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberLessons", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NumberLessons
		{
			get
			{
				return this._NumberLessons;
			}
			set
			{
				if ((this._NumberLessons != value))
				{
					this.OnNumberLessonsChanging(value);
					this.SendPropertyChanging();
					this._NumberLessons = value;
					this.SendPropertyChanged("NumberLessons");
					this.OnNumberLessonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdate", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastUpdate
		{
			get
			{
				return this._LastUpdate;
			}
			set
			{
				if ((this._LastUpdate != value))
				{
					this.OnLastUpdateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdate = value;
					this.SendPropertyChanged("LastUpdate");
					this.OnLastUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technology_Course", Storage="_Courses", ThisKey="ID", OtherKey="TeachnologyID")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Technology = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Technology = null;
		}
	}
}
#pragma warning restore 1591
